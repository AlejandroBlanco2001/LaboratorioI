package VisualTemplates;

import Arbol.Arbol;
import Arbol.Comment;
import Arbol.Post;
import Arbol.User;
import Prinicipal.ListaEnlazada;
import Prinicipal.Ventana;
import VisualTemplates.Panel.InfoFigura;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Point;
import java.awt.Shape;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * Clase que se encarga de mostrar en pantalla por medio de {@code JFrame} el Arbol de manera grafica
 *
 * @author Alex
 */
public class TreeDisplay extends TemplateVentana {

    /**
     * Creates new form TreeDisplay
     */
    private boolean isOpenFrame = false;
    private Graphics g;
    private Panel dp;
    private Boolean toggle = true;
    private Arbol ab;
    private final Ventana ventana;
    private UserProfile userProfile;
    private PostProfile postProfile;

    /**
     * Constructor para la visualizacion del manejador del Arbol
     *
     * @param ab Arbol a graficar
     * @param ventana Ventana que maneja la GUI General
     */
    public TreeDisplay(Arbol ab, Ventana ventana) {
        this.ab = ab;
        this.ventana = ventana;
        dp = new Panel(ab.getRaiz());
        Dimension d = new Dimension(783, 440);
        dp.setMinimumSize(d);
        dp.setMaximumSize(d);
        dp.setPreferredSize(d);
        setResizable(false);
        setUndecorated(true);
        initComponents();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setGUI();
    }

    @Override
    public void setGUI() {
        numberNodes.setText(String.valueOf(ab.Tama√±o()));
        numberUsers.setText(String.valueOf(ab.cantidadDeUsers()));
        numberPost.setText(String.valueOf(ab.cantidadPosts()));
        numberComments.setText(String.valueOf(ab.cantidadDeComments()));
        grupoBotones.add(userFilter);
        grupoBotones.add(commentFilter);
        grupoBotones.add(postFilter);
        grupoBotones.add(noFilter);
        setImages();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CommentsView = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        postCreator = new javax.swing.JLabel();
        creator = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        body = new javax.swing.JTextArea();
        title = new javax.swing.JLabel();
        grupoBotones = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        numberNodes = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        numberUsers = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        numberPost = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        numberComments = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        level = new javax.swing.JTextField();
        filterView = new javax.swing.JLabel();
        userFilter = new javax.swing.JRadioButton();
        commentFilter = new javax.swing.JRadioButton();
        postFilter = new javax.swing.JRadioButton();
        noFilter = new javax.swing.JRadioButton();
        idField = new javax.swing.JTextField();
        leftArrow = new javax.swing.JLabel();
        rightArrow = new javax.swing.JLabel();
        TreeScroll = new javax.swing.JScrollPane(this.dp);
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        close = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();

        jPanel3.setBackground(new java.awt.Color(85, 57, 110));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 2, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Post:");

        jLabel8.setFont(new java.awt.Font("Century Gothic", 2, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Title");

        jLabel9.setFont(new java.awt.Font("Century Gothic", 2, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Body");

        jLabel10.setFont(new java.awt.Font("Century Gothic", 2, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("By");

        postCreator.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        postCreator.setForeground(new java.awt.Color(255, 255, 255));
        postCreator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        postCreator.setText("jLabel11");
        postCreator.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                postCreatorMouseClicked(evt);
            }
        });

        creator.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        creator.setForeground(new java.awt.Color(255, 255, 255));
        creator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        creator.setText("jLabel12");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        body.setEditable(false);
        body.setColumns(20);
        body.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        body.setLineWrap(true);
        body.setRows(5);
        jScrollPane1.setViewportView(body);

        title.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("jLabel13");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(postCreator, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(creator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(259, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel4)
                .addGap(14, 14, 14)
                .addComponent(postCreator)
                .addGap(17, 17, 17)
                .addComponent(jLabel10)
                .addGap(11, 11, 11)
                .addComponent(creator)
                .addGap(13, 13, 13)
                .addComponent(jLabel8)
                .addGap(21, 21, 21)
                .addComponent(title)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CommentsViewLayout = new javax.swing.GroupLayout(CommentsView.getContentPane());
        CommentsView.getContentPane().setLayout(CommentsViewLayout);
        CommentsViewLayout.setHorizontalGroup(
            CommentsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        CommentsViewLayout.setVerticalGroup(
            CommentsViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(85, 57, 110));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Switch View");
        jLabel1.setToolTipText("Switch between scroll view/compact view");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Number of Nodes");

        numberNodes.setEditable(false);
        numberNodes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberNodes.setText("jTextField1");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Number of Users");

        numberUsers.setEditable(false);
        numberUsers.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberUsers.setText("jTextField1");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Number of Posts");

        numberPost.setEditable(false);
        numberPost.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberPost.setText("jTextField1");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Number of Comments");

        numberComments.setEditable(false);
        numberComments.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        numberComments.setText("jTextField1");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Tree Levels");

        level.setEditable(false);
        level.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        level.setText("4");
        level.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                levelFocusGained(evt);
            }
        });

        filterView.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        filterView.setForeground(new java.awt.Color(255, 255, 255));
        filterView.setText("Filter");
        filterView.setToolTipText("Switch between scroll view/compact view");
        filterView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                filterViewMouseClicked(evt);
            }
        });

        userFilter.setBackground(new java.awt.Color(85, 57, 110));
        userFilter.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        userFilter.setForeground(new java.awt.Color(255, 255, 255));
        userFilter.setText("User");
        userFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userFilterActionPerformed(evt);
            }
        });

        commentFilter.setBackground(new java.awt.Color(85, 57, 110));
        commentFilter.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        commentFilter.setForeground(new java.awt.Color(255, 255, 255));
        commentFilter.setText("Comment");
        commentFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentFilterActionPerformed(evt);
            }
        });

        postFilter.setBackground(new java.awt.Color(85, 57, 110));
        postFilter.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        postFilter.setForeground(new java.awt.Color(255, 255, 255));
        postFilter.setText("Post");
        postFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                postFilterActionPerformed(evt);
            }
        });

        noFilter.setBackground(new java.awt.Color(85, 57, 110));
        noFilter.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        noFilter.setForeground(new java.awt.Color(255, 255, 255));
        noFilter.setText("All");
        noFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noFilterActionPerformed(evt);
            }
        });

        idField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        idField.setText("1");
        idField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                idFieldFocusLost(evt);
            }
        });
        idField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                idFieldMouseClicked(evt);
            }
        });

        leftArrow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leftArrowMouseClicked(evt);
            }
        });

        rightArrow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rightArrowMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(numberUsers)
                                    .addComponent(numberPost)
                                    .addComponent(numberNodes)
                                    .addComponent(numberComments)
                                    .addComponent(level, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(46, 46, 46)))))
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filterView)
                .addGap(116, 116, 116))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(userFilter)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(leftArrow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(noFilter)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(idField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(commentFilter, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(postFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(19, 19, 19))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rightArrow)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numberNodes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numberUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numberPost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numberComments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(level, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(filterView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(leftArrow)
                    .addComponent(rightArrow))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userFilter)
                    .addComponent(commentFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(postFilter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, Short.MAX_VALUE)
                .addComponent(noFilter)
                .addContainerGap())
        );

        TreeScroll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TreeScrollMouseClicked(evt);
            }
        });

        TreeScroll.setVisible(true);

        jPanel2.setBackground(new java.awt.Color(151, 52, 237));

        jButton1.setText("Search for specific User");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Search for specific Post ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Search Comments of a Post");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Give all Users");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Give all Posts");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Give all Comments");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Search Posts of a User");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Search for specific Comment");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("Number of Post of a User");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Number of Comment of a Post");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(92, 92, 92)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(95, 95, 95)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(64, 64, 64)
                .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(97, 97, 97))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(41, 41, 41)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(44, 44, 44))
        );

        close.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        close.setText("X");
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });

        minimize.setFont(new java.awt.Font("Century Gothic", 2, 12)); // NOI18N
        minimize.setText("-");
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TreeScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(minimize)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(close)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(close)
                            .addComponent(minimize)))
                    .addComponent(TreeScroll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        if (toggle == false) {
            Dimension d = new Dimension(783, 440);
            dp.setDimension(d);
        } else {
            Dimension d = new Dimension(29900, 430);
            dp.setDimension(d);
        }
        toggle = !toggle;

    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * Metodo que se encarga de la busqueda de un {@link User} dado su ID o su Nombre.
     *
     * @return user User a buscar
     */
    public User searchUser() {
        String username = JOptionPane.showInputDialog(null, "Ingrese el ID o el username del User", "Busqueda de User", JOptionPane.DEFAULT_OPTION);
        int ID;
        User user;
        try {
            ID = Integer.parseInt(username);
        } catch (NumberFormatException e) {
            ID = -1;
        }
        if (ID == -1) {
            user = ab.busquedaUser(username);
        } else {
            user = ab.busquedaUser(ID);
        }
        return user;
    }

    /**
     * Metodo que se encarga de la busqueda de un {@link Comment} dado su ID, su titulo, su cuerpo o el email del creador.
     *
     * @return comment Comment a buscar
     */
    public Comment searchComment() {
        String title = JOptionPane.showInputDialog(null, "Ingrese el ID, titulo del Comment, cuerpo de Comment o email del creador", "Busqueda de Comments de un POST", JOptionPane.DEFAULT_OPTION);
        int ID;
        Comment comment;
        try {
            ID = Integer.parseInt(title);
        } catch (NumberFormatException e) {
            ID = -1;
        }
        if (ID == -1) {
            comment = ab.getComment(title);
        } else {
            comment = ab.getComment(ID);
        }
        if (comment == null) {
            JOptionPane.showMessageDialog(null, "ERROR", "Comentario no encontrado", JOptionPane.ERROR_MESSAGE);
        }
        return comment;
    }

    /**
     * Metodo que se encarga de la busqueda de un {@link Post} dado su ID, su titulo, su cuerpo o el email del creador.
     *
     * @return comment Comment a buscar
     */
    public Post searchPost() {
        String title = JOptionPane.showInputDialog(null, "Ingrese el ID o el titulo del Post", "Busqueda de Comments de un POST", JOptionPane.DEFAULT_OPTION);
        int ID;
        Post post;
        try {
            ID = Integer.parseInt(title);
        } catch (NumberFormatException e) {
            ID = -1;
        }
        if (ID == -1) {
            post = ab.getPost(title);
        } else {
            post = ab.getPost(ID);
        }
        return post;
    }
    
    @Override
    public void setFonts() {
    }

    @Override
    public void setImages() {
        ImageIcon icon = new ImageIcon("Resources/icons/leftArrow.png");
        ImageIcon icon2 = new ImageIcon("Resources/icons/rightArrow.png");
        Image img = icon.getImage();
        Image img2 = icon2.getImage();
        Image newimg = img.getScaledInstance(15, 24, java.awt.Image.SCALE_SMOOTH);
        Image newimg2 = img2.getScaledInstance(15, 24, java.awt.Image.SCALE_SMOOTH);
        leftArrow.setIcon(new ImageIcon(newimg));
        rightArrow.setIcon(new ImageIcon(newimg2));
    }

    /**
     * Metodo que se encarga de emparejar la entrada recibida por Mouse, para realizar una busqueda
     *
     * @param info Objeto transitorio {@link InfoFigura} para detectar el tipo de Nodo y su id.
     */
    private void searchNodo(InfoFigura info) {
        if (info.getType().equals("User") && info.getId() != 0) {
            User u = ab.busquedaUser(info.getId());
            userProfile = new UserProfile();
            userProfile.setUsuario(u);
            userProfile.setVisible(true);
        } else if (info.getType().equals("Post")) {
            Post p = ab.getPost(info.getId());
            postProfile = new PostProfile();
            User u = ab.getUserByPost(info.getId());
            postProfile.setPost(p, u);
            postProfile.setVisible(true);
        } else {
            Comment c = ab.getComment(info.getId());
            Post post = ab.getPost(c.getPostId());
            CommentsView.setTitle("SMALL SOLUTIONS");
            creator.setText(c.getEmail());
            title.setText(c.getName());
            body.setText(c.getBody());
            postCreator.setText(post.getTitle());
            CommentsView.setSize(new Dimension(1166, 400));
            CommentsView.setVisible(true);
        }
    }

    /**
     * Metodo que se encarga de verificar que las ventanas no se encuentran m√°s de una abierta al mismo tiempo
     *
     * @return open {@code true} si alguno se encuentra activo, {@code false} si todos estan cerrados
     */
    private boolean checkInstanceOfFrames() {
        if (userProfile == null && postProfile == null && CommentsView == null) {
            return false;
        }
        if (userProfile != null) {
            if (userProfile.isVisible()) {
                return true;
            }
        }
        if (postProfile != null) {
            if (postProfile.isVisible()) {
                return true;
            }
        }
        if (CommentsView != null) {
            if (CommentsView.isVisible()) {
                return true;
            }
        }
        return false;
    }

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_closeMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        // TODO add your handling code here:
        setState(Creators.ICONIFIED);
    }//GEN-LAST:event_minimizeMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        User user = searchUser();
        if (user != null) {
            userProfile = new UserProfile();
            userProfile.setUsuario(user);
            userProfile.setVisible(true);
            return;
        }
        JOptionPane.showMessageDialog(null, "User no encontrado", "ERROR", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        User user = searchUser();
        if (user != null) {
            userProfile = new UserProfile();
            userProfile.setUsuario(user);
            userProfile.setVisible(true);
            return;
        }
        JOptionPane.showMessageDialog(null, "User no encontrado", "ERROR", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Post post = searchPost();
        User user = ab.getUserByPost(post.getTitle());
        if (post != null) {
            postProfile = new PostProfile();
            postProfile.setPost(post, user);
            postProfile.setVisible(true);
            return;
        }
        JOptionPane.showMessageDialog(null, "Post no encontrado", "ERROR", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        ventana.setCurrentAllSearch("User");
        ventana.setAllUsers();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        ventana.setCurrentAllSearch("Post");
        ListaEnlazada<Post> posts = new ListaEnlazada();
        for (Object nodo : ab.getRaiz().getPosts()) {
            User user = (User) nodo;
            for (Object n : user.getPosts()) {
                Post post = (Post) n;
                posts.add(post);
            }
        }
        ventana.setAllPost(posts);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        ventana.setCurrentAllSearch("Comment");
        ListaEnlazada<Comment> comment = new ListaEnlazada();
        for (Object nodo : ab.getRaiz().getPosts()) {
            User user = (User) nodo;
            for (Object n : user.getPosts()) {
                Post post = (Post) n;
                for (Object nod : post.getComments()) {
                    Comment c = (Comment) nod;
                    comment.add(c);
                }
            }
        }
        ventana.setAllComments(comment);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Post post = searchPost();
        if (post != null) {
            User user = ab.getUserByPost(post.getTitle());
            PostProfile postProfile = new PostProfile();
            postProfile.setPost(post, user);
            postProfile.setVisible(true);
            return;
        }
        JOptionPane.showMessageDialog(null, "Post no encontrado", "ERROR", JOptionPane.ERROR_MESSAGE);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        Comment c = searchComment();
        if (c != null) {
            Post post = ab.getPost(c.getPostId());
            CommentsView.setTitle("SMALL SOLUTIONS");
            creator.setText(c.getEmail());
            title.setText(c.getName());
            body.setText(c.getBody());
            postCreator.setText(post.getTitle());
            CommentsView.setSize(new Dimension(1166, 400));
            CommentsView.setVisible(true);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        User user = searchUser();
        if (user != null) {
            UserProfile userProfile = new UserProfile();
            userProfile.setUsuario(user);
            userProfile.setVisible(true);
        }
        JOptionPane.showMessageDialog(null, "User no encontrado", "ERROR", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        Post post = searchPost();
        if (post != null) {
            User user = ab.getUserByPost(post.getTitle());
            postProfile = new PostProfile();
            postProfile.setPost(post, user);
            postProfile.setVisible(true);
            return;
        }
        JOptionPane.showMessageDialog(null, "Post no encontrado", "ERROR", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void filterViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterViewMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_filterViewMouseClicked

    private void userFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userFilterActionPerformed
        // TODO add your handling code here:
        dp.setRaiz(ab.getRaiz().getHijos().get(0));
        idField.setText("1");
    }//GEN-LAST:event_userFilterActionPerformed

    private void noFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noFilterActionPerformed
        // TODO add your handling code here:
        dp.setRaiz(ab.getRaiz());
    }//GEN-LAST:event_noFilterActionPerformed

    private void levelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_levelFocusGained
        // TODO add your handling code here:

    }//GEN-LAST:event_levelFocusGained

    private void idFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_idFieldMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_idFieldMouseClicked

    private void leftArrowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftArrowMouseClicked
        // TODO add your handling code here:
        int currentPosition = Integer.parseInt(idField.getText()) - 1;
        if (currentPosition == 0) {
            JOptionPane.showMessageDialog(null, "ID no existente, esta por debajo del minimo", "ERROR DE BUSQUEDA", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (userFilter.isSelected()) {
            dp.setRaiz(ab.busquedaUser(currentPosition));
        } else if (commentFilter.isSelected()) {
            dp.setRaiz(ab.getComment(currentPosition));
        } else if (postFilter.isSelected()) {
            dp.setRaiz(ab.getPost(currentPosition));
        } else {
            System.out.println("ACA NO SIRVE");
        }
        idField.setText(String.valueOf(currentPosition));

    }//GEN-LAST:event_leftArrowMouseClicked

    private void rightArrowMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rightArrowMouseClicked
        // TODO add your handling code here:
        int currentPosition = Integer.parseInt(idField.getText()) + 1;
        if (userFilter.isSelected()) {
            if (currentPosition > ab.cantidadDeUsers()) {
                JOptionPane.showMessageDialog(null, "ID no existente, esta por encima del maximo de Users", "ERROR DE BUSQUEDA", JOptionPane.ERROR_MESSAGE);
                idField.setText("1");
                dp.setRaiz(ab.getRaiz().getHijos().get(0));
                return;
            }
            dp.setRaiz(ab.busquedaUser(currentPosition));
        } else if (commentFilter.isSelected()) {
            if (currentPosition > ab.cantidadDeComments()) {
                JOptionPane.showMessageDialog(null, "ID no existente, esta por encima del maximo de Post", "ERROR DE BUSQUEDA", JOptionPane.ERROR_MESSAGE);
                idField.setText("1");
                dp.setRaiz(ab.getRaiz().getHijos().get(0).getHijos().get(0));
                return;
            }
            dp.setRaiz(ab.getComment(currentPosition));
        } else if (postFilter.isSelected()) {
            if (currentPosition > ab.cantidadPosts()) {
                JOptionPane.showMessageDialog(null, "ID no existente, esta por encima del maximo de Post", "ERROR DE BUSQUEDA", JOptionPane.ERROR_MESSAGE);
                idField.setText("1");
                dp.setRaiz(ab.getRaiz().getHijos().get(0).getHijos().get(0).getHijos().get(0));
                return;
            }
            dp.setRaiz(ab.getPost(currentPosition));
        }
        idField.setText(String.valueOf(currentPosition));
    }//GEN-LAST:event_rightArrowMouseClicked

    private void commentFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentFilterActionPerformed
        // TODO add your handling code here:
        dp.setRaiz(ab.getRaiz().getHijos().get(0).getHijos().get(0).getHijos().get(0));
        idField.setText("1");
    }//GEN-LAST:event_commentFilterActionPerformed

    private void postFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_postFilterActionPerformed
        // TODO add your handling code here:
        dp.setRaiz(ab.getRaiz().getHijos().get(0).getHijos().get(0));
        idField.setText("1");
    }//GEN-LAST:event_postFilterActionPerformed

    private void TreeScrollMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TreeScrollMouseClicked
        // TODO add your handling code here:
        Point p = evt.getPoint();
        int index = 0;
        isOpenFrame = checkInstanceOfFrames();
        if (!isOpenFrame) {
            for (Shape shape : dp.getNodos()) {
                if (shape.contains(p)) {
                    InfoFigura info = dp.getNodosID().get(index);
                    System.out.println(info.getId() + " y es de tipo" + info.getType());
                    searchNodo(info);
                    isOpenFrame = true;
                }
                index++;
            }
        }
    }//GEN-LAST:event_TreeScrollMouseClicked

    private void idFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_idFieldFocusLost
        // TODO add your handling code here:
        int currentPosition = 1;
        try {
            currentPosition = Integer.parseInt(idField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Los ID debe ser valores numericos, por favor ingrese un valor numerico", "ERROR DE INGRESO", JOptionPane.ERROR_MESSAGE);
            currentPosition = -1;
        }
        if (currentPosition == 0) {
            return;
        }
        if (userFilter.isSelected()) {
            if (currentPosition > ab.cantidadDeUsers() || currentPosition == -1) {
                if (currentPosition > ab.cantidadDeUsers()) {
                    JOptionPane.showMessageDialog(null, "ID no existente, esta por encima del maximo de Users", "ERROR DE BUSQUEDA", JOptionPane.ERROR_MESSAGE);
                }
                idField.setText("1");
                dp.setRaiz(ab.getRaiz().getHijos().get(0));
                return;
            }
            dp.setRaiz(ab.busquedaUser(currentPosition));
        } else if (commentFilter.isSelected()) {
            if (currentPosition > ab.cantidadDeComments() || currentPosition == -1) {
                if (currentPosition > ab.cantidadDeComments()) {
                    JOptionPane.showMessageDialog(null, "ID no existente, esta por encima del maximo de Comment", "ERROR DE BUSQUEDA", JOptionPane.ERROR_MESSAGE);
                }
                idField.setText("1");
                dp.setRaiz(ab.getRaiz().getHijos().get(0).getHijos().get(0).getHijos().get(0));
                return;
            }
            dp.setRaiz(ab.getComment(currentPosition));
        } else if (postFilter.isSelected()) {
            if (currentPosition > ab.cantidadPosts() || currentPosition == -1) {
                if (currentPosition > ab.cantidadPosts()) {
                    JOptionPane.showMessageDialog(null, "ID no existente, esta por encima del maximo de Post", "ERROR DE BUSQUEDA", JOptionPane.ERROR_MESSAGE);
                }
                idField.setText("1");
                dp.setRaiz(ab.getRaiz().getHijos().get(0).getHijos().get(0));
                return;
            }
            dp.setRaiz(ab.getPost(currentPosition));
        }
    }//GEN-LAST:event_idFieldFocusLost

    private void postCreatorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_postCreatorMouseClicked
        // TODO add your handling code here:
        ventana.searchPost(postCreator.getText());
    }//GEN-LAST:event_postCreatorMouseClicked

    /**
     * @param args the command line arguments
     * @param ar Arbol a manejar
     * @param ventana Ventana para obtener los apartados de GUI
     */
    public static void main(String args[], Arbol ar, Ventana ventana) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TreeDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TreeDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TreeDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TreeDisplay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TreeDisplay(ar, ventana).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog CommentsView;
    private javax.swing.JScrollPane TreeScroll;
    private javax.swing.JTextArea body;
    private javax.swing.JLabel close;
    private javax.swing.JRadioButton commentFilter;
    private javax.swing.JLabel creator;
    private javax.swing.JLabel filterView;
    private javax.swing.ButtonGroup grupoBotones;
    private javax.swing.JTextField idField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel leftArrow;
    private javax.swing.JTextField level;
    private javax.swing.JLabel minimize;
    private javax.swing.JRadioButton noFilter;
    private javax.swing.JTextField numberComments;
    private javax.swing.JTextField numberNodes;
    private javax.swing.JTextField numberPost;
    private javax.swing.JTextField numberUsers;
    private javax.swing.JLabel postCreator;
    private javax.swing.JRadioButton postFilter;
    private javax.swing.JLabel rightArrow;
    private javax.swing.JLabel title;
    private javax.swing.JRadioButton userFilter;
    // End of variables declaration//GEN-END:variables

}
